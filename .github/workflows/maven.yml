# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Build and Push Docker Image
      uses: mr-smithers-excellent/docker-build-push@v4
      with:
        image: shirrako/blockchain-java
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    
    - uses: actions/checkout@master
    
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create ACR
      id: create-acr
      run: |
        az acr create -n Blockchainjava -g Blockchainjavab2c8-rg --location "South Central US" --sku Standard --admin-enabled
        echo "::set-output name=acr_username::`az acr credential show -n Blockchainjava --query username | xargs`"
        echo "::set-output name=acr_password::`az acr credential show -n Blockchainjava --query passwords[0].value | xargs`"
        echo "::add-mask::`az acr credential show -n Blockchainjava --query passwords[0].value | xargs`"

    - uses: azure/docker-login@v1
      with:
        login-server: blockchainjava.azurecr.io
        username: ${{ steps.create-acr.outputs.acr_username }}
        password: ${{ steps.create-acr.outputs.acr_password }}

    - name: Build and push image to ACR
      id: build-image
      run: |
        docker build "$GITHUB_WORKSPACE/" -f  "Dockerfile" -t blockchainjava.azurecr.io/salzer4:${{ github.sha }}
        docker push blockchainjava.azurecr.io/salzer4:${{ github.sha }}
    
    - uses: azure/k8s-set-context@v1
      id: login
      with:
         kubeconfig: ${{ secrets.aks_salzer4_kubeConfig }}
    
    - name: Create namespace
      run: |
        namespacePresent=`kubectl get namespace | grep salzer495ae | wc -l`
        if [ $namespacePresent -eq 0 ]
        then
            echo `kubectl create namespace salzer495ae`
        fi

    - uses: azure/k8s-create-secret@v1
      with:
        namespace: salzer495ae
        container-registry-url: blockchainjava.azurecr.io
        container-registry-username: ${{ steps.create-acr.outputs.acr_username }}
        container-registry-password: ${{ steps.create-acr.outputs.acr_password }}
        secret-name: salzer4dockerauth
       
    - uses: azure/k8s-deploy@v1.2
      with:
        namespace: salzer495ae
        manifests: |
          manifests/deployment.yml
          manifests/service.yml
        images: |
          blockchainjava.azurecr.io/salzer4:${{ github.sha }}
        imagepullsecrets: |
          salzer4dockerauth   

